// EXEMPLO DE FUNCAO RECURSIVA QUE LIMITA O ESPAÇO
// LIMITE ESTA ENTRE 400 DE ALTURA E 400 DE LARGURA

#include <stdio.h>
#include <math.h>

typedef struct{
    float x;
    float y;
}vetor;

void draw(vetor objeto, vetor velocidade, vetor aceleracao);
void addVetor(vetor *a, vetor b);
float normaVetor(vetor a);
void versorVetor(vetor *a);
void atualizarPosicao(vetor *objeto, vetor velocidade);

int main(){
    vetor objeto;
    objeto.x=99;
    objeto.y=200;

    vetor velocidade;
    velocidade.x = 0;
    velocidade.y = 0;

    vetor aceleracao;
    aceleracao.x = -0.001;
    aceleracao.y = 0.01;

    draw(objeto, velocidade, aceleracao);

    return 0;
}

void draw(vetor objeto, vetor velocidade, vetor aceleracao){
    if(objeto.x <100)
        addVetor(&velocidade, aceleracao);

    addVetor(&objeto, velocidade);
    
    if ((objeto.x > 400) || (objeto.x < 0)) {   // O QUE VAI ACONTECER COM A NAVE QUANDO ELA CHEGAR NA FRONTEIRA
        velocidade.x = velocidade.x * -1;       //PODE SER INSERIDO NESSES BLOCOS
    }
    if ((objeto.y> 400) || (objeto.y < 0)) {
        velocidade.y = velocidade.y * -1;
    }

    printf("%.2lf %.2lf\n", objeto.x, objeto.y);

    draw(objeto, velocidade, aceleracao);
}

void addVetor(vetor *a, vetor b){
    a->x = a->x + b.x;
    a->y = a->y + b.y;
}

float normaVetor(vetor a){
    return (sqrt(a.x * a.x + a.y * a.y));
}

void versorVetor(vetor *a){
    float norma = normaVetor(*a);
    a->x = a->x/norma;
    a->y = a->y/norma;
}

void atualizarPosicao(vetor *objeto, vetor velocidade){
    // INSERIR CODIGO PARA ATUALIZAR A ACELERAÇÃO
    addVetor(objeto, velocidade);
}
