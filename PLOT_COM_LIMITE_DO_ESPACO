#include <stdio.h>
#include <math.h>

typedef struct{
    float x;
    float y;
}vetor;

typedef struct {
    vetor velObj;
    vetor posObj;
}objeto;

typedef struct {
    char nome[80];
    float massa;
    objeto valor;
}nave;

typedef struct {
    objeto valor;
}projetil;

void draw(objeto objeto1, vetor velocidade, vetor aceleracao);
void addVetorAB(vetor *a, vetor b);
float normaVetor(vetor A);
void versorVetor(vetor *A);
void printVetor(vetor A);

int main(){
    nave nave1;
    vetor velAux;
    vetor acelAux;

    nave1.valor.posObj.x = 99;
    nave1.valor.posObj.y = 200;

    nave1.valor.velObj.x = 1;
    nave1.valor.velObj.y = 3.3;

    acelAux.x = -0.001; // ACELERACAO NEGATIVA DEIXA POSSIVEL QUE O OBJETO SAIA DO LIMITE
    acelAux.y = 0.01;

    velAux.x = 1;
    velAux.y = 3.3;

    draw(nave1.valor, velAux, acelAux);

    return 0;
}

void draw(objeto objeto1, vetor velocidade, vetor aceleracao){
    if(objeto1.posObj.x < 100)
        addVetorAB(&objeto1.velObj, aceleracao);

    addVetorAB(&objeto1.posObj, velocidade);

    if ((objeto1.posObj.x > 400) || (objeto1.posObj.x < 0)) {   // O QUE VAI ACONTECER COM A NAVE QUANDO ELA CHEGAR NA FRONTEIRA
        velocidade.x = velocidade.x * -1;                       //PODE SER INSERIDO NESSES BLOCOS
    }
    if ((objeto1.posObj.y> 400) || (objeto1.posObj.y < 0)) {
        velocidade.y = velocidade.y * -1;
    }

    printVetor(objeto1.posObj);

    draw(objeto1, velocidade, aceleracao);
}

void addVetorAB(vetor *A, vetor B){
    A->x = A->x + B.x;
    A->y = A->y + B.y;
}

float normaVetor(vetor A){
    return (sqrt(A.x * A.x + A.y * A.y));
}

void versorVetor(vetor *A){
    float norma = normaVetor(*A);
    A->x = A->x/norma;
    A->y = A->y/norma;
}

void printVetor(vetor A){
    printf("%.2lf %.2lf\n", A.x, A.y);
}
